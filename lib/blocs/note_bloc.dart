import 'package:bloc/bloc.dart';

// keep events and bloc classes in the same file for simplicity

enum NoteEvents { create, modify, delete } // all possibilities for this event

class NoteBloc extends Bloc<NoteEvents, int> {
  NoteBloc(int initialState) : super(initialState);

  // mapEventToState is auto generated by AS (opt+enter)
  @override
  Stream<int> mapEventToState(NoteEvents event) async* {
    // async* allows yield (to emit values!)

    // switch case makes it easy
    switch (event) {
      case NoteEvents.create:
        yield state + 1; // yield is like a return without termination!
        break;
      case NoteEvents.modify:
        yield state - 1; // remember, state is an integer
        break;
      case NoteEvents.delete:
        yield state * 0;
        break;
    }
  }
}
