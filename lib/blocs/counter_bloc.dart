import 'package:bloc/bloc.dart';

// keep events and bloc classes in the same file for simplicity

enum CounterEvents { increment, decrement } // all possibilities for this event

class CounterBloc extends Bloc<CounterEvents, int> {
  CounterBloc(int initialState) : super(initialState);

  // mapEventToState is auto generated by AS (opt+enter)
  @override
  Stream<int> mapEventToState(CounterEvents event) async* {
    // async* allows yield (to emit values!)

    // switch case makes it easy
    switch (event) {
      case CounterEvents.increment:
        yield state + 1; // yield is like a return without termination!
        break;
      case CounterEvents.decrement:
        yield state - 1; // remember, state is an integer
        break;
    }
  }
}
